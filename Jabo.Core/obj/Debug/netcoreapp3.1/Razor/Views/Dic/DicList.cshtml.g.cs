#pragma checksum "D:\git\DotNetCore\Jabo.Core\Views\Dic\DicList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "50699c1df323f4a48bfa8b5539d70c82fc636885"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dic_DicList), @"mvc.1.0.view", @"/Views/Dic/DicList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"50699c1df323f4a48bfa8b5539d70c82fc636885", @"/Views/Dic/DicList.cshtml")]
    public class Views_Dic_DicList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""layuimini-container layuimini-page-anim"">
    <div class=""layuimini-main"">
        <div class=""layui-form layuimini-form"" lay-filter=""example"">
            <div class=""layui-row"">
                <div class=""layui-col-xs3"">
                    <div class=""layui-card"">
                        <div class=""layui-card-header"">
                            类别名称
                        </div>
                        <div class=""layui-card-body"">
                            <div id=""tree"" class=""demo-tree-more""></div>
                        </div>
                    </div>
                </div>
                <div class=""layui-col-xs9"">
                    <div class=""layui-card"">
                        <div class=""layui-card-header"">
                            <button class=""layui-btn layui-btn-normal layui-btn-sm data-add-btn"" lay-event=""add"" id=""btnAdd""> 添加 </button>
                        </div>
                        <div class=""layui-card-body"">
                          ");
            WriteLiteral(@"  <table class=""layui-hide"" id=""currentTableId"" lay-filter=""currentTableFilter""></table>
                            <script type=""text/html"" id=""currentTableBar"">
                                <a class=""layui-btn layui-btn-normal layui-btn-xs data-count-edit"" lay-event=""edit"">编辑</a>
                                <a class=""layui-btn layui-btn-xs layui-btn-danger data-count-delete"" lay-event=""delete"">删除</a>
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    layui.use(['form', 'table', 'element', 'tree'], function () {

        var $ = layui.jquery,
            form = layui.form,
            table = layui.table,
            tree = layui.tree;

        let typeCode = ""ProjectName"";  //字典类型编码
        let typeName = ""项目名称"";  //字典类型名称

        table.render({
            elem: '#currentTableId',
            url: '/Dic/GetDicPageByTypeCode',
            c");
            WriteLiteral(@"ols: [[
                { field: 'dicName', width: '85%', title: typeName, align: 'center' },
                { title: '操作', width: '15%', toolbar: '#currentTableBar', align: ""center"" }
            ]],
            skin: 'line',
            limits: [10, 15, 20, 25, 50, 100],
            limit: 10,
            page: true,
            where: { dicTypeCode: typeCode }
        });

        var reloadTab = function (typeCode, typeName) {
            //执行搜索重载
            table.reload('currentTableId', {
                page: { curr: 1 },
                where: { dicTypeCode: typeCode },
                cols: [[
                    { field: 'dicName', width: '85%', title: typeName, align: 'center' },
                    { title: '操作', width: '15%', toolbar: '#currentTableBar', align: ""center"" }
                ]]

            }, 'data');
        };

        $.get(""/Dic/GetDicTypeList"", null, function (data) {
            tree.render({
                elem: '#tree',
                data: dat");
            WriteLiteral(@"a,
                showLine: false,  //是否开启连接线
                click: function (obj) {
                    typeCode = obj.data.id;
                    typeName = obj.data.title;
                    reloadTab(typeCode, typeName);
                }
            });
        });

        $(""#btnAdd"").unbind(""click"").click(function (e) {
            if (typeCode === """" || typeName === """") {
                layer.msg(""请选择类别"");
                return;
            }

            var index = layer.open({
                title: '添加' + typeName,
                type: 2,
                shade: 0.2,
                shadeClose: true,
                area: ['600px', '220px'],
                content: ""/Dic/DicSave/#/typeCode="" + typeCode + ""/typeName="" + typeName,
            });
            $(window).on(""resize"", function () {
                layer.full(index);
            });
        });

        table.on('tool(currentTableFilter)', function (obj) {
            var data = obj.data;
          ");
            WriteLiteral(@"  console.log(data);
            if (obj.event === 'edit') {
                if (typeCode === """" || typeName === """") {
                    layer.msg(""请选择类别"");
                    return;
                }

                var index = layer.open({
                    title: '编辑' + typeName,
                    type: 2,
                    shade: 0.2,
                    shadeClose: true,
                    area: ['600px', '220px'],
                    content: ""/Dic/DicSave/#/dicCode="" + data.dicCode + ""/typeCode="" + typeCode + ""/typeName="" + typeName,
                });
                $(window).on(""resize"", function () {
                    layer.full(index);
                });
            } else if (obj.event === 'delete') {
                layer.confirm('您确定删除吗？', function (index) {
                    $.post(""/Dic/RemoveDicByCode"", { list: [data] }, function (json) {
                        if (json.Result) {
                            table.reload('currentTableId');
           ");
            WriteLiteral("             } else {\r\n                            layer.msg(json.Message);\r\n                        }\r\n                    }, \"json\");\r\n                    layer.close(index);\r\n                });\r\n            }\r\n        });\r\n\r\n    });</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
