#pragma checksum "D:\git\DotNetCore\Jabo.Core\Views\User\UserList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6f3ecfbe2c83dbb78b9d2f3927d2027762727432"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_UserList), @"mvc.1.0.view", @"/Views/User/UserList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6f3ecfbe2c83dbb78b9d2f3927d2027762727432", @"/Views/User/UserList.cshtml")]
    public class Views_User_UserList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""layuimini-container layuimini-page-anim"">
    <div class=""layuimini-main"">

        <fieldset class=""table-search-fieldset"">
            <legend>搜索信息</legend>
            <div style=""margin: 10px 10px 10px 10px"">
                <form class=""layui-form layui-form-pane""");
            BeginWriteAttribute("action", " action=\"", 287, "\"", 296, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <div class=""layui-form-item"">
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">用户名称</label>
                            <div class=""layui-input-inline"">
                                <input type=""text"" name=""displayName"" autocomplete=""off"" class=""layui-input"">
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <button type=""submit"" class=""layui-btn layui-btn-primary"" lay-submit lay-filter=""data-search-btn""><i class=""layui-icon""></i> 搜 索</button>
                        </div>
                    </div>
                </form>
            </div>
        </fieldset>
        <script type=""text/html"" id=""toolbarDemo"">
            <div class=""layui-btn-container"">
                <button class=""layui-btn layui-btn-normal layui-btn-sm data-add-btn"" lay-event=""add""> 添加 </button>
                <button class=""layui-btn l");
            WriteLiteral(@"ayui-btn-sm layui-btn-danger data-delete-btn"" lay-event=""delete""> 删除 </button>
            </div>
        </script>
        <table class=""layui-hide"" id=""currentTableId"" lay-filter=""currentTableFilter""></table>
        <script type=""text/html"" id=""currentTableBar"">
            <a class=""layui-btn layui-btn-warm layui-btn-xs data-count-view"" lay-event=""view"">查看</a>
            <a class=""layui-btn layui-btn-normal layui-btn-xs data-count-edit"" lay-event=""edit"">编辑</a>
            <a class=""layui-btn layui-btn-xs layui-btn-danger data-count-delete"" lay-event=""delete"">删除</a>
        </script>
    </div>
</div>

<script>
    layui.use(['form', 'table', 'miniPage', 'element'], function () {
        var $ = layui.jquery,
            form = layui.form,
            table = layui.table,
            miniPage = layui.miniPage;

        table.render({
            elem: '#currentTableId',
            url: '/User/GetUserList',
            toolbar: '#toolbarDemo',
            defaultToolbar: [],
      ");
            WriteLiteral(@"      cols: [[
                { type: ""checkbox"", width: '5%' },
                { type: ""numbers"", width: '5%', title: '序号' },
                { field: 'userCode', width: '15%', title: '用户编码', align: 'center', hide: true },
                { field: 'userName', width: '15%', title: '用户账号', align: 'center' },
                { field: 'displayName', width: '15%', title: '用户名称', align: 'center' },
                { field: 'phone', width: '15%', title: '手机号', align: 'center' },
                { field: 'sex', width: '15%', title: '性别', align: 'center' },
                { field: 'createDate', width: '15%', title: '创建日期', align: 'center', templet: ""<div>{{layui.util.toDateString(d.createDate, 'yyyy-MM-dd')}}</div>""  },
                { title: '操作', width: '15%', toolbar: '#currentTableBar', align: ""center"" }
            ]],
            limits: [10, 15, 20, 25, 50, 100],
            limit: 10,
            page: true,
            skin: 'line'
        });

        // 监听搜索操作
        form.on('submit");
            WriteLiteral(@"(data-search-btn)', function (data) {

            //执行搜索重载
            table.reload('currentTableId', {
                page: {
                    curr: 1
                }
                , where: data.field

            }, 'data');

            return false;
        });

        /**
         * toolbar事件监听
         */
        table.on('toolbar(currentTableFilter)', function (obj) {
            if (obj.event === 'add') {   // 监听添加操作
                var index = layer.open({
                    title: '添加用户',
                    type: 2,
                    shade: 0.2,
                    shadeClose: true,
                    area: ['800px', '400px'],
                    content: ""/User/UserSave""
                });
                $(window).on(""resize"", function () {
                    layer.full(index);
                });
            } else if (obj.event === 'delete') {  // 监听删除操作
                var checkStatus = table.checkStatus('currentTableId')
                    , da");
            WriteLiteral(@"ta = checkStatus.data;

                if (data.length === 0) {
                    layer.alert('请选择要删除的用户');
                    return
                }
                layer.confirm('您确定删除吗？', function (index) {
                    $.post(""/User/RemoveUserByCode"", { list: data }, function (json) {
                        if (json.Result) {
                            table.reload('currentTableId');
                        } else {
                            layer.msg(json.Message);
                        }
                    });
                    layer.close(index);
                });
            }
        });

        //监听表格复选框选择
        table.on('checkbox(currentTableFilter)', function (obj) {
            //console.log(obj)
        });

        table.on('tool(currentTableFilter)', function (obj) {
            var data = obj.data;
            if (obj.event === 'edit') {
                var index = layer.open({
                    title: '编辑用户',
                    type:");
            WriteLiteral(@" 2,
                    shade: 0.2,
                    shadeClose: true,
                    area: ['800px', '400px'],
                    content: ""/User/UserSave#/userCode="" + data.userCode,
                });
                $(window).on(""resize"", function () {
                    layer.full(index);
                });
            } else if (obj.event === 'delete') {
                layer.confirm('您确定删除吗？', function (index) {
                    $.post(""/User/RemoveUserByCode"", { list: [data] }, function (json) {
                        if (json.Result) {
                            table.reload('currentTableId');
                        } else {
                            layer.msg(json.Message);
                        }
                    }, ""json"");
                    layer.close(index);
                });
            } else if (obj.event === 'view') {
                var index = layer.open({
                    title: '查看用户',
                    type: 2,
                 ");
            WriteLiteral(@"   shade: 0.2,
                    shadeClose: true,
                    area: ['800px', '400px'],
                    content: ""/User/UserView#/userCode="" + data.userCode,
                });
                $(window).on(""resize"", function () {
                    layer.full(index);
                });
                return false;
            }
        });

    });</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
