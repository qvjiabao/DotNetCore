@using QJB.Shared
@inject HttpClient Http

@if (menuList != null)
{
    <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Inline">
        @foreach (var item in menuList)
        {
            <SubMenu Key="@item.MenuGuid" TitleTemplate="TitleTemplate(item.Icon,item.Title)">

                @foreach (var subItem in item.Children)
                {
                    <MenuItem RouterMatch="NavLinkMatch.All" RouterLink="@subItem.Url" Key="@subItem.MenuGuid">@subItem.Title</MenuItem>
                }
            </SubMenu>
        }
    </Menu>
}
@code
{
    IEnumerable<MenuVModel> menuList;

    protected override async Task OnInitializedAsync()
    {
        menuList = await Http.GetFromJsonAsync<IEnumerable<MenuVModel>>("Home/GetAllMenu");
    }

    RenderFragment TitleTemplate(string icon, string title)
    {
        return@<span>
        <Icon Type=@icon Theme="outline"></Icon>
        <span>@title</span>
    </span>;
}
}